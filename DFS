#include <stdio.h>
#define SIZE 10

int stack[SIZE], top = -1;
int visited[SIZE] = {0};

void push(int v) {
    if (top == SIZE - 1) return;
    stack[++top] = v;
}

int pop() {
    if (top == -1) return -1;
    return stack[top--];
}

void dfs(int graph[SIZE][SIZE], int n, int start) {
    push(start);

    while (top != -1) {
        int current = pop();

        if (!visited[current]) {
            printf("%d ", current);
            visited[current] = 1;

            for (int i = n - 1; i >= 0; i--) {
                if (graph[current][i] && !visited[i])
                    push(i);
            }
        }
    }
}

int main() {
    int graph[SIZE][SIZE], n, start;

    printf("Enter number of vertices: ");
    scanf("%d", &n);

    printf("Enter adjacency matrix:\n");
    for (int i = 0; i < n; i++)
        for (int j = 0; j < n; j++)
            scanf("%d", &graph[i][j]);

    printf("Enter starting vertex: ");
    scanf("%d", &start);

    printf("DFS Traversal: ");
    dfs(graph, n, start);

    return 0;
}
