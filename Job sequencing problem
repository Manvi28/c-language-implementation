#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX 100

// Structure to represent a job
struct Job {
    char id[10];     // Job ID
    int deadline;    // Deadline to complete the job
    int profit;      // Profit if job is completed
};

// Comparator function to sort jobs by descending profit
int compare(const void* a, const void* b) {
    struct Job* job1 = (struct Job*)a;
    struct Job* job2 = (struct Job*)b;
    return job2->profit - job1->profit; // descending
}

int main() {
    int n;
    printf("Enter number of jobs: ");
    scanf("%d", &n);

    struct Job jobs[MAX];

    // Get job details from user
    printf("Enter job id, deadline and profit for each job:\n");
    for (int i = 0; i < n; i++) {
        scanf("%s %d %d", jobs[i].id, &jobs[i].deadline, &jobs[i].profit);
    }

    // Step 1: Sort jobs by profit in descending order
    qsort(jobs, n, sizeof(struct Job), compare);

    // Step 2: Find maximum deadline to determine size of time slots array
    int maxDeadline = 0;
    for (int i = 0; i < n; i++) {
        if (jobs[i].deadline > maxDeadline)
            maxDeadline = jobs[i].deadline;
    }

    // Step 3: Create slots and initialize them as free (-1)
    int slot[maxDeadline + 1]; // using 1-based indexing
    for (int i = 0; i <= maxDeadline; i++)
        slot[i] = -1;

    char scheduledJobs[MAX][10];
    int totalProfit = 0;
    int count = 0;

    // Step 4: Assign jobs to slots
    for (int i = 0; i < n; i++) {
        // Find a free slot from job.deadline to 1
        for (int j = jobs[i].deadline; j > 0; j--) {
            if (slot[j] == -1) {
                slot[j] = i;  // Assign job index to the slot
                strcpy(scheduledJobs[count++], jobs[i].id);
                totalProfit += jobs[i].profit;
                break;
            }
        }
    }

    // Step 5: Display scheduled jobs and total profit
    printf("Scheduled Jobs: ");
    for (int i = 0; i < count; i++) {
        printf("%s ", scheduledJobs[i]);
    }
    printf("\nTotal Profit: %d\n", totalProfit);

    return 0;
}
