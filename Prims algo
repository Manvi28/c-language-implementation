Time Complexity	O(n³)
Space Complexity	O(n²)

#include <stdio.h>
#define INF 9999
#define MAX 100

int main() {
    int n, i, j;
    int cost[MAX][MAX];
    int visited[MAX] = {0};
    int min, u, v;
    int total_cost = 0;

    printf("Enter the number of vertices: ");
    scanf("%d", &n);

    printf("Enter the adjacency matrix (use 9999 for no edge):\n");
    for (i = 0; i < n; i++)
        for (j = 0; j < n; j++)
            scanf("%d", &cost[i][j]);

    visited[0] = 1; // start from vertex 0

    printf("\nEdges in the Minimum Spanning Tree:\n");
    for (int edges = 0; edges < n - 1; edges++) {
        min = INF;
        for (i = 0; i < n; i++) {
            if (visited[i]) {
                for (j = 0; j < n; j++) {
                    if (!visited[j] && cost[i][j] < min) {
                        min = cost[i][j];
                        u = i;
                        v = j;
                    }
                }
            }
        }
        visited[v] = 1;
        printf("%d - %d : %d\n", u, v, cost[u][v]);
        total_cost += cost[u][v];
    }

    printf("Total cost of MST: %d\n", total_cost);
    return 0;
}
