#include <stdio.h>
#include <limits.h>

#define MAX 100

int visited[MAX];

// Function to find the nearest unvisited city
int findNearestCity(int city, int n, int cost[][MAX]) {
    int nearest = -1;
    int minCost = INT_MAX;

    for (int i = 0; i < n; i++) {
        if (!visited[i] && cost[city][i] && cost[city][i] < minCost) {
            minCost = cost[city][i];
            nearest = i;
        }
    }

    return nearest;
}

void tspGreedy(int start, int n, int cost[][MAX]) {
    int current = start;
    int totalCost = 0;

    printf("Tour: %d ", start + 1);
    visited[start] = 1;

    for (int i = 1; i < n; i++) {
        int next = findNearestCity(current, n, cost);
        if (next == -1) break;

        totalCost += cost[current][next];
        current = next;
        visited[current] = 1;
        printf("-> %d ", current + 1);
    }

    totalCost += cost[current][start]; // Return to start
    printf("-> %d\n", start + 1);
    printf("Total cost: %d\n", totalCost);
}

int main() {
    int n, cost[MAX][MAX];

    printf("Enter number of cities: ");
    scanf("%d", &n);

    printf("Enter the cost matrix:\n");
    for (int i = 0; i < n; i++)
        for (int j = 0; j < n; j++)
            scanf("%d", &cost[i][j]);

    for (int i = 0; i < n; i++) visited[i] = 0;

    tspGreedy(0, n, cost);  // Starting from city 0 (you can change this)

    return 0;
}
